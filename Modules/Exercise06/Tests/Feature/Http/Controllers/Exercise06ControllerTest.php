<?php

namespace Modules\Exercise04\Tests\Feature\Http\Controllers;

use Modules\Exercise06\Http\Controllers\Exercise06Controller;
use Tests\TestCase;

class Exercise06ControllerTest extends TestCase
{
    protected $orderService;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testIndex()
    {
        $response = $this->get(action([Exercise06Controller::class, 'index']));
        $response->assertViewIs('exercise06::index');
    }

    /**
     * @param array $inputs Request data
     *
     * @dataProvider providerDataValidateExercise06RequestFailed
     */

    public function testExercise06Request($inputs)
    {
        $response = $this->post(action([Exercise06Controller::class, 'calculate']), $inputs);
        $response->assertStatus(302)
            ->assertSessionHasErrors();
    }

    public function providerDataValidateExercise06RequestFailed()
    {
        return [
            [['bill' => '']],
            [['bill' => 'text']],
            [['bill' => -1]],
            [['has_watch' => 10]],
        ];
    }

    /**
     * @param array $inputs Request data
     * @param  $result
     *
     * @dataProvider providerDataTestCalculate
     */

    public function testCalculate($inputs)
    {
        $response = $this->post(action([Exercise06Controller::class, 'calculate'], $inputs));
        $response->assertStatus(302);
        $this->assertTrue($response->isRedirection());
        $response->assertSessionHas('result');
        $response->assertSessionHas('_old_input');
    }

    public function providerDataTestCalculate()
    {
        return [
            [['bill'=> 5000, 'has_watch' => true]],
            [['bill'=> 5000, 'has_watch' => false]],
            [['bill'=> 2000, 'has_watch' => true]],
            [['bill'=> 2000, 'has_watch' => false]],
            [['bill'=> 50, 'has_watch' => false]],
            [['bill'=> 50, 'has_watch' => true]],
        ];
    }
}
