<?php

namespace Modules\Exercise04\Tests\Feature\Services;

use Modules\Exercise07\Services\CheckoutService;
use Tests\TestCase;

class CheckoutServiceTest extends TestCase
{
    protected $calculateService;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->calculateService = app()->make(CheckoutService::class);
    }

    /**
     * @param array $params
     *
     *  @param  $amount
     *
     * *  @param $shippingFee
     *
     * @dataProvider providerCalculateShippingFee
     */
    public function testCalculateShippingFee($params, $amount, $shippingFee)
    {
        $response = $this->calculateService->calculateShippingFee($params);
        $this->assertEquals($amount, $response['amount']);
        $this->assertEquals($shippingFee, $response['shipping_fee']);
    }

    public function providerCalculateShippingFee()
    {
        return [
            [['amount'=> 5000], 5000, 0],
            [['amount'=> 5000, 'shipping_express' => "on"], 5000, 500],
            [['amount'=> 5000, 'premium_member' => "on"], 5000, 0],
            [['amount'=> 5000, 'premium_member' => "on", 'shipping_express' => "on"], 5000, 500],
            [['amount'=> 100, 'premium_member' => "on", 'shipping_express' => "on"], 100, 500],
            [['amount'=> 100, 'shipping_express' => "on"], 100, 1000],
            [['amount'=> 100, 'premium_member' => "on"], 100, 0],
            [['amount'=> 100], 100, 500],
        ];
    }
}
